0
00:00:04,690 --> 00:00:08,700
우리는 stop 속성을 가진 range 함수를 사용하여 

1
00:00:08,720 --> 00:00:11,910
숫자로 카운트하여 순서를 빠르게 만들 수 있습니다. 

2
00:00:11,930 --> 00:00:13,920
우리는 방금 하나의 인수인

3
00:00:13,940 --> 00:00:16,110
중지 값을 갖는 범위 함수 중

4
00:00:16,130 --> 00:00:20,040
가장 단순한 것을 살펴보았습니다.

5
00:00:20,060 --> 00:00:22,820
범위에서 정말로 정지 값이 될 하나의 값을

6
00:00:22,840 --> 00:00:25,290
가진 경우 기본적으로 0부터 시작하는 시퀀스를 만드는 것입니다. 

7
00:00:25,310 --> 00:00:27,250
우선 실행해 봅시다. 

8
00:00:27,270 --> 00:00:32,520
범위에서 0을 시작하고

9
00:00:32,540 --> 00:00:36,900
시작 값을 볼 수 있습니다. 여기서 정지 값은 10입니다.

10
00:00:36,920 --> 00:00:41,200
그래서 이것은 0에서 9로 갈 것이고

11
00:00:41,220 --> 00:00:44,820
목록에 있으면 볼 수 있는 방법입니다. 

12
00:00:44,840 --> 00:00:48,420
이것은 우리가 가장 일반적으로

13
00:00:48,440 --> 00:00:52,379
목록을 만드는 범위를 사용하거나

14
00:00:52,390 --> 00:00:54,929
아래에서 반복할 때 사용하는 방법입니다.

15
00:00:54,940 --> 00:00:59,370
그래서 이 경우 우리는 for를 사용할 것입니다. 

16
00:00:59,390 --> 00:01:03,239
우리가 반복할 수 있는 시퀀스와 

17
00:01:03,250 --> 00:01:07,080
같은 시퀀스를 만들 것이라는 목록으로

18
00:01:07,100 --> 00:01:09,120
캐스팅되지 않은 경우에도 

19
00:01:09,140 --> 00:01:12,630
그 범위를 생각할 수 있습니다.

20
00:01:12,650 --> 00:01:14,640
그럼 먼저 살펴보고 목록을 

21
00:01:14,660 --> 00:01:20,370
각 항목의 출력물을

22
00:01:20,390 --> 00:01:23,250
얻는 것을 볼 수 있습니다.

23
00:01:23,270 --> 00:01:26,760
그래서 우리가 어떤 방식으로든 

24
00:01:26,780 --> 00:01:32,310
일한 출력을 얻었기 때문에

25
00:01:32,330 --> 00:01:35,730
그 범위의 위치에 목록이 있는 것처럼 

26
00:01:35,750 --> 00:01:40,470
실제로 작동합니다.

27
00:01:40,490 --> 00:01:44,250
우리는 이들을 사용하여 반복적으로 객체 목록을 만들어 

28
00:01:44,270 --> 00:01:47,070
매우 빠르게 숫자 목록을 얻을 수 있습니다.

29
00:01:47,090 --> 00:01:51,480
다음 예제에서 숫자 배열 값을

30
00:01:51,500 --> 00:01:54,900
할당한 다음 

31
00:01:54,920 --> 00:01:57,900
이 숫자를 목록으로 출력하여

32
00:01:57,920 --> 00:02:01,140
여기에 변수 소계를 0으로 초기화합니다. 

33
00:02:01,160 --> 00:02:03,600
그래서 우리는 우리가 만드는 각 숫자를

34
00:02:03,620 --> 00:02:06,300
살펴볼 것입니다.

35
00:02:06,320 --> 00:02:08,760
임의의 항목을 살펴보고 0에서 9까지

36
00:02:08,780 --> 00:02:12,269
범위의 모든 자릿수를

37
00:02:12,280 --> 00:02:15,810
더한 다음 부분 합계와

38
00:02:15,830 --> 00:02:19,240
총값을 출력합니다.

39
00:02:19,260 --> 00:02:25,180
이 코드를 실행하여 우리의 리스트가

40
00:02:25,200 --> 00:02:27,880
우리의 범위 캐스팅을 목록으로 보았습니다.

41
00:02:27,900 --> 00:02:34,600
그러고 나서 부분합 0, 1이 2나 3이 되고,

42
00:02:34,620 --> 00:02:40,270
6이 추가되어 45가 될 때까지 3을 더 추가합니다.

43
00:02:40,290 --> 00:02:43,630
마지막 예제에서는 range를 사용하려고 합니다.

44
00:02:43,650 --> 00:02:46,000
우리가 여기 있는 목록을 반복합니다.

45
00:02:46,020 --> 00:02:49,900
그래서 철자리스트에는 날짜 관련 용어가 있습니다.

46
00:02:49,920 --> 00:02:53,020
이것은 그저 문자열 목록일 뿐입니다.

47
00:02:53,040 --> 00:02:54,820
그래서 우리는 그 철자리스트의

48
00:02:54,840 --> 00:02:57,580
길이를 발견할 것이고,

49
00:02:57,600 --> 00:03:00,100
우리는 그것을 2로 나누려 합니다.

50
00:03:00,120 --> 00:03:02,230
int로 나눈 그것이

51
00:03:02,250 --> 00:03:05,290
목록에 대한 거리의 절반입니다.

52
00:03:05,310 --> 00:03:08,560
그래서 우리는 0에서 시작하여

53
00:03:08,580 --> 00:03:11,440
중간 지점에서 멈추고 중간 지점에서

54
00:03:11,460 --> 00:03:13,960
3이라는 코드를 실행하여 

55
00:03:13,980 --> 00:03:16,540
3의 정지 값으로 범위를 생성하므로

56
00:03:16,560 --> 00:03:21,010
우리는 중간 목록을 통해

57
00:03:21,030 --> 00:03:24,970
인덱스 0, 1, 2를 얻습니다.

58
00:03:24,990 --> 00:03:29,650
우리는 range 함수를 하나의 인수와 함께

59
00:03:29,670 --> 00:03:31,870
사용할 수 있습니다.

60
00:03:31,890 --> 00:03:34,630
이는 숫자 시퀀스 생성에 유용하며

61
00:03:34,650 --> 00:03:39,990
반복에서 사용되는 중지 값을 제공합니다.

