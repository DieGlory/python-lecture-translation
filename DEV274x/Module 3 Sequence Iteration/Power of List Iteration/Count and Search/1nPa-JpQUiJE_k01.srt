0
00:00:04,311 --> 00:00:08,155
문자열 내에서 문자 또는 하위 문자열을 찾으려면 

1
00:00:08,200 --> 00:00:12,044
count 메소드를 사용할 수 있습니다. 

2
00:00:12,155 --> 00:00:14,577
이 예에서는 cities라고 하는 

3
00:00:14,666 --> 00:00:18,688
문자열 목록이 있으며 

4
00:00:18,755 --> 00:00:20,840
각 문자열은 도시 이름입니다. 

5
00:00:20,955 --> 00:00:23,866
그리고 우리에게는 뉴욕, 상하이, 뮌헨 등의 

6
00:00:23,977 --> 00:00:25,940
검색 문자가 있습니다. 

7
00:00:26,040 --> 00:00:29,088
우리는 소문자 a로 설정했습니다. 

8
00:00:29,155 --> 00:00:30,333
count 메서드를 사용하여

9
00:00:30,410 --> 00:00:32,355
검색하려고 하는 대상이고 

10
00:00:32,444 --> 00:00:34,377
우리는 카운터 합계가 0이므로

11
00:00:34,460 --> 00:00:37,000
현재 값은 0입니다.

12
00:00:37,133 --> 00:00:39,977
따라서 이 예제의 count 메소드를 중요하다고 생각합니다.

13
00:00:40,066 --> 00:00:43,120
우리는 익숙한 for-in 반복 목록을 사용하여 

14
00:00:43,200 --> 00:00:46,570
목록 이름이 도시이라고 하자면

15
00:00:46,688 --> 00:00:48,866
각 루프의 값을 보유할 변수 도시 이름에

16
00:00:48,930 --> 00:00:53,533
임의의 이름을 지정합니다.

17
00:00:53,666 --> 00:00:58,060
그러한 이유로 처음으로 뉴욕에 있다가

18
00:00:58,155 --> 00:01:00,555
두 번째로 상하이로 온 것입니다.

19
00:01:00,666 --> 00:01:05,133
0에서 시작하는 합계는 

20
00:01:05,200 --> 00:01:07,155
count 메소드에서 반환된 정수를 추가합니다. 

21
00:01:07,266 --> 00:01:10,822
그래서 count 메소드는

22
00:01:10,933 --> 00:01:14,222
많은 부분 문자열을 검사합니다.

23
00:01:14,311 --> 00:01:15,380
이 경우에는 하나의 문자 &amp;quot;a&amp;quot;가

24
00:01:15,511 --> 00:01:18,980
문자열에 있는지 알려줍니다. 

25
00:01:19,066 --> 00:01:21,140
그래서 뉴욕에서는 

26
00:01:21,244 --> 00:01:23,270
맞는 것이 없거나 0을 반환하고

27
00:01:23,400 --> 00:01:26,630
상하이는 a의 수에 대해 2를 반환합니다.

28
00:01:26,750 --> 00:01:30,133
count 메소드는 매번 우리 목록의 끝에 

29
00:01:30,222 --> 00:01:32,933
도달할 때까지 총계를 유지한 다음

30
00:01:33,066 --> 00:01:37,066
총계를 출력할 수 있습니다.

31
00:01:37,155 --> 00:01:41,933
코드를 실행해 봅시다.

32
00:01:42,044 --> 00:01:47,400
발견된 총계가 6이고 총계를 볼 수 있습니다.

33
00:01:47,511 --> 00:01:51,311
루프 내 총계의 출력물을 추가하여

34
00:01:51,400 --> 00:01:53,600
누적 합계를 볼 수 있습니다. 

35
00:01:53,711 --> 00:01:57,333
처 a가 매치 된 다음 처음으로 뉴욕은 합계가 0이고

36
00:01:57,422 --> 00:02:01,400
상하이는 합계 2로 올라가고, 뮌헨과 도쿄에서는 2로 유지되고

37
00:02:01,511 --> 00:02:04,460
두바이는 3에서 1로 증가합니다.

38
00:02:04,533 --> 00:02:06,977
목록 항목의 반복 내에서 

39
00:02:07,040 --> 00:02:10,466
count 메서드를 사용하여

40
00:02:10,555 --> 00:02:14,600
 문자 &amp;quot;a&amp;quot;를 찾은 것처럼

41
00:02:14,733 --> 00:02:18,488
문자열 내의 하위 문자열 수를

42
00:02:18,577 --> 00:02:20,955
찾을 수 있습니다.

