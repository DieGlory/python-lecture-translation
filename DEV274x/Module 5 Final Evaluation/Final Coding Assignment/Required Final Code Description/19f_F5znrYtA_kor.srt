0
00:00:00,170 --> 00:00:04,575
최종 코딩 작업입니다. 

1
00:00:04,575 --> 00:00:07,770
우리는 파일을 가지고 다시 작업하고 

2
00:00:07,770 --> 00:00:11,580
퀴즈를 만들려고 합니다. 

3
00:00:11,580 --> 00:00:14,730
우리는 파일부터 읽으려고 합니다.

4
00:00:14,730 --> 00:00:18,990
그리고 우리는 사용자에게 여러분들이 처음에 있는 

5
00:00:18,990 --> 00:00:22,860
요소들을 알았는지 물어볼 것입니다. 

6
00:00:22,860 --> 00:00:28,530
그러고 나서 코드를 점검하고, 

7
00:00:28,530 --> 00:00:31,680
그 항목들이 코드에 있는지 확인하고, 

8
00:00:31,680 --> 00:00:34,890
퀴즈 점수를 통해 

9
00:00:34,890 --> 00:00:36,780
자신이 구현한 방법이 올바른지 

10
00:00:36,780 --> 00:00:38,730
알 수 있고,

11
00:00:38,730 --> 00:00:40,920
틀린 점이 있다면 코드에 붙여넣을 때 

12
00:00:40,920 --> 00:00:43,440
성공적으로 이 과정을 

13
00:00:43,440 --> 00:00:46,230
완료해야 할 핵심 부분을 포함하여 

14
00:00:46,230 --> 00:00:49,490
여기에서 마지막으로 주의 깊게 읽어야 할 

15
00:00:49,490 --> 00:00:52,195
몇 가지의 특정 

16
00:00:52,195 --> 00:00:55,984
요구 사항이 있습니다.

17
00:00:55,984 --> 00:00:58,905
계속해서 Jupyter 노트북을 

18
00:00:58,905 --> 00:01:02,760
살펴봅시다. 

19
00:01:02,760 --> 00:01:05,040
여기에는 사전에 불러온 솔루션 코드가 있으므로 

20
00:01:05,040 --> 00:01:08,060
작동 방식을 확인할 수 있습니다. 

21
00:01:08,060 --> 00:01:09,480
우선 실행 하여 봅시다. 

22
00:01:09,480 --> 00:01:13,425
여기에 다른 코드를 입력하거나 코드

23
00:01:13,425 --> 00:01:15,990
또는 실제 문자열을 입력할 수 있으며 

24
00:01:15,990 --> 00:01:19,267
읽은 파일에 대해 검토를 할 것입니다. 

25
00:01:19,267 --> 00:01:22,230
그래서, 제가 "수소를 알고 있다" 를

26
00:01:22,230 --> 00:01:31,803
코드로 입력하겠습니다. 

27
00:01:31,803 --> 00:01:33,690
제가 입력한 코드를 검토하는 

28
00:01:33,690 --> 00:01:35,850
몇 가지 테스트가 있습니다만

29
00:01:35,850 --> 00:01:37,860
코드를 변경하여도 이전에 입력하였던 코드를

30
00:01:37,860 --> 00:01:41,051
볼 수가 있습니다.

31
00:01:41,051 --> 00:01:43,796
그리고 이 부분을 목록에 넣을 수 있습니다. 

32
00:01:43,796 --> 00:01:45,330
계속하여 항목을 

33
00:01:45,330 --> 00:01:59,820
추가하겠습니다. 

34
00:01:59,820 --> 00:02:05,387
여기서 저는 60%의 정확도를 보았습니다. 

35
00:02:05,387 --> 00:02:06,995
여기 보시면 저는 수소를 한 번 더 입력할 수 없습니다만

36
00:02:06,995 --> 00:02:09,060
따로 수소를 목록에 넣었습니다.

37
00:02:09,060 --> 00:02:10,740
그러한 이유로 수소, 붕소, 나트륨은 

38
00:02:10,740 --> 00:02:13,030
처음 20에 자리 잡고 있는데 

39
00:02:13,030 --> 00:02:16,324
아연은 자리 잡고 있지 않습니다.

40
00:02:16,324 --> 00:02:21,690
파이썬은 배워야 할 중요한 부분입니다. 

41
00:02:21,690 --> 00:02:24,330
하지만 아연 같은 경우에는

42
00:02:24,330 --> 00:02:28,145
20개에 자리 잡고 있지 않습니다.

43
00:02:28,145 --> 00:02:31,205
그래서 우리의 요구 사항을 

44
00:02:31,205 --> 00:02:33,380
다시 이야기를 해보자면, 

45
00:02:33,380 --> 00:02:36,770
우리는 get_names라는 함수를 

46
00:02:36,770 --> 00:02:39,230
만들어야 할 것입니다. 

47
00:02:39,230 --> 00:02:43,070
우리는 이 이름들의 값을 얻고 목록에 저장하려고 합니다. 

48
00:02:43,070 --> 00:02:45,170
그러고 나서 목록에 있는 

49
00:02:45,170 --> 00:02:48,290
각 항목 20개의 코드 목록에 

50
00:02:48,290 --> 00:02:54,320
있는지 확인해야 합니다. 

51
00:02:54,320 --> 00:02:56,120
그런 다음 올바른 숫자를

52
00:02:56,120 --> 00:02:59,380
기준으로 백분율을 

53
00:02:59,380 --> 00:03:04,095
계산할 것입니다.

54
00:03:04,095 --> 00:03:05,300
올바른 비율을 계산할 수 있는 

55
00:03:05,300 --> 00:03:07,725
몇 가지 방법이 있습니다. 

56
00:03:07,725 --> 00:03:10,325
예를 들어, 각 센서는 5개의 항목을 그리고

57
00:03:10,325 --> 00:03:13,520
각 코드는 20%의 값이 있습니다. 

58
00:03:13,520 --> 00:03:15,380
그러한 이유로 여러분은 숫자를 

59
00:03:15,380 --> 00:03:18,620
알아낼 수 있습니다. 

60
00:03:18,620 --> 00:03:23,885
여기서 수학을 사용하여 나눗셈을 사용하고 

61
00:03:23,885 --> 00:03:26,725
백분율을 100으로 곱하면 

62
00:03:26,725 --> 00:03:31,340
소수점을 없앨 수 있습니다.

63
00:03:31,340 --> 00:03:34,765
이 과제의 키워드는 다른 

64
00:03:34,765 --> 00:03:37,820
모든 과제와 마찬가지로 필요합니다. 

65
00:03:37,820 --> 00:03:41,165
우리는 반환 값을 가진 함수를 만들고 있습니다. 

66
00:03:41,165 --> 00:03:44,450
그래서 우리는 def 키워드를 사용하여 리턴을 하려고 합니다.

67
00:03:44,450 --> 00:03:48,060
우리는 파일로 작업을 하고 있으므로 파일을 열어야 합니다. 

68
00:03:48,060 --> 00:03:51,230
read 라인을 사용하고, 

69
00:03:51,230 --> 00:03:54,885
입력을 덧붙여서 입력할 필요가 있습니다.

70
00:03:54,885 --> 00:03:57,230
우리는 입력을 할 때

71
00:03:57,230 --> 00:04:00,520
불필요한 공백을 제거할 것입니다. 

72
00:04:00,520 --> 00:04:03,155
우리는 입력 함수를 사용하고 있습니다. 

73
00:04:03,155 --> 00:04:04,850
우리는 길이를 사용할 것입니다. 

74
00:04:04,850 --> 00:04:08,145
조건부 if를 사용할 것이고,

75
00:04:08,145 --> 00:04:09,740
우리가 물건을 비교할 때

76
00:04:09,740 --> 00:04:11,566
upper 나 lower를 사용할 것입니다.

77
00:04:11,566 --> 00:04:13,250
양측 위 또는 양쪽에 위치하기를 원합니다.

78
00:04:13,250 --> 00:04:15,350
그래서 우리는 대문자와 소문자가 있는

79
00:04:15,350 --> 00:04:18,155
수소를 테스트했을 때와 같이

80
00:04:18,155 --> 00:04:19,760
윗부분을 신경 쓰지 않고

81
00:04:19,760 --> 00:04:21,805
대문자 소문자 둘 다 진행하였습니다.

82
00:04:21,805 --> 00:04:24,410
for / in을 사용하여 목록을 

83
00:04:24,410 --> 00:04:27,500
반복하고 목록을 출력하려고 합니다. 

84
00:04:27,500 --> 00:04:29,495
edx에 제출할 때 점수를 얻으려면

85
00:04:29,495 --> 00:04:31,290
모든 항목을 사용하여 올바르게 작동해야 합니다.

86
00:04:31,290 --> 00:04:36,410
행복한 코딩 하세요.

