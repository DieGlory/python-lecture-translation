0
00:00:04,258 --> 00:00:07,920
텍스트 파일을 목록으로 열기 위해, 우리는 read lines () 메소드를 사용할 수 있습니다.

1
00:00:09,450 --> 00:00:10,850
이 예에서는 이미 Jupyter Notebook에 

2
00:00:10,851 --> 00:00:16,010
poem을 가져 왔습니다. 

3
00:00:16,011 --> 00:00:20,740
그리고 우리는 그것을 열어 그 변수를 poem 1 변수에 할당할 것입니다. 

4
00:00:20,741 --> 00:00:24,610

그래서 이것은 열린 포맷으로,

5
00:00:24,611 --> 00:00:30,630
파일의 인스턴스에서 read lines () 메소드를 사용할 것입니다.

6
00:00:30,631 --> 00:00:35,155
read lines ()는 텍스트 파일의 각 행을 

7
00:00:35,156 --> 00:00:38,875
목록 항목으로 읽습니다.

8
00:00:38,876 --> 00:00:42,252
코드를 실행하고 어떻게 보이는지 봅시다. 

9
00:00:42,253 --> 00:00:46,160
그리고 여기에 문자열 목록이 있습니다. 

10
00:00:46,161 --> 00:00:51,070
또한, 목록 항목을 만들기 위한 중단 점이었던 

11
00:00:51,071 --> 00:00:55,500
개별적인 새로운 라인 문자가 포함되어 있습니다. 

12
00:00:55,501 --> 00:00:59,940
이 문자는 삭제되지 않으므로 거기에 포함됩니다. 

13
00:00:59,941 --> 00:01:05,420
그래서 우리는 이 목록을 반복하여 각 줄을 

14
00:01:05,421 --> 00:01:09,190
출력할 때 poem_lines를 만들었습니다. 그래서 

15
00:01:09,191 --> 00:01:14,660
read lines () 메소드를 사용하여 poem_ lines를 나열하십시오.

16
00:01:14,661 --> 00:01:19,650
그러니 계속 진행해보고 내 출력문이 이미 기본값으로 

17
00:01:19,651 --> 00:01:26,950
새로운 라인을 제공한다는 것을 알 수 있습니다. 

18
00:01:26,951 --> 00:01:29,630
그리고 문자열에 새로운 줄이 있습니다. 

19
00:01:29,631 --> 00:01:32,840
그리고 이 여분의 선을 거기에 넣습니다. 

20
00:01:32,841 --> 00:01:35,910
우리는 여러분이 그것을 사용할 때 그것을 이해해야 합니다. read line ()을 실행하면 각 

21
00:01:35,911 --> 00:01:39,710
줄 바꿈 문자가 중단됩니다. 

22
00:01:40,740 --> 00:01:45,040
그리고 새로운 줄 문자를 

23
00:01:45,041 --> 00:01:46,640
각 문자열의 끝으로 저장합니다. 

24
00:01:47,870 --> 00:01:52,790
그래서 우리는 사용할 수 있습니다. read line은 전체 텍스트 파일을 목록으로 읽습니다. 

