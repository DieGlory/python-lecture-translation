0
00:00:03,939 --> 00:00:07,294
반복문을 사용할 때 텍스트 파일 내용을 줄 단위로 사용하고 싶다면,

1
00:00:07,295 --> 00:00:11,250
readline ()을 사용하면 됩니다

2
00:00:11,251 --> 00:00:15,265
이번에 해볼 예제를 위해 poem 1.text를 Jupyter Notebook으로 가져왔고

3
00:00:15,266 --> 00:00:20,135
이제 파일을 열고

4
00:00:20,136 --> 00:00:23,175
poem1에 할당해 주겠습니다

5
00:00:23,176 --> 00:00:29,660
이제 poem1은 메모리에 올라갔고, readline() 메소드를 poem1에 사용할 수 있게 되었습니다.

6
00:00:29,661 --> 00:00:32,380
읽어온 내용을 보면 끝에 개행 문자가 포함되어 있습니다

7
00:00:32,381 --> 00:00:36,020
이걸 제거하기 위해 반복문을 사용해 보겠습니다

8
00:00:36,021 --> 00:00:39,329
보면 내용을 보여드릴려고 쭉 실행했었는데,

9
00:00:39,330 --> 00:00:42,638
poem1에 텍스트 파일을 다시열어서

10
00:00:42,639 --> 00:00:46,369
포인터의 위치를 파일의 맨 앞으로 다시 설정해 주겠습니다

11
00:00:46,370 --> 00:00:48,579
그래서 readline()으로 읽으면

12
00:00:48,580 --> 00:00:51,240
파일의 시작 부분에서 시작합니다.

13
00:00:52,920 --> 00:00:56,020
그래서 바로 여기에서 텍스트 파일 내용을 한 줄 읽게 될 것이고, 

14
00:00:56,021 --> 00:00:58,440
개행문자가 있을겁니다

15
00:01:00,840 --> 00:01:07,100
while poem_line을 반복할때, 값이 비어있지 않고 문자열 값을 가지고 있다면

16
00:01:07,101 --> 00:01:12,770
while 루프는 계속됩니다. 

17
00:01:12,771 --> 00:01:18,163
그리고 출력할때 매 줄별로 [:-1] 슬라이싱을 이용해서

18
00:01:18,164 --> 00:01:23,306
맨끝의 개행문자를 제외하고,

19
00:01:23,307 --> 00:01:27,840
upper 메소드를 사용하겠습니다

20
00:01:29,902 --> 00:01:34,075
그래서 모든 문자가 대문자가 되었습니다.그 다음, poem_line의 다음 줄을 읽을거고,

21
00:01:34,076 --> 00:01:37,200
그리고 다시 검사 해서, poem_line에 문자열 값이 들어있다면,

22
00:01:37,201 --> 00:01:42,000
빈 문 자열이 반환될때까지 출력하고

23
00:01:42,001 --> 00:01:44,180
루프가 끝날겁니다

24
00:01:45,540 --> 00:01:47,090
이제 코드를 실행해 봅시다. 

25
00:01:47,091 --> 00:01:53,430
보면, 각줄에 있었던 개행문자가 없어졌고,

26
00:01:53,431 --> 00:01:58,186
슬라이싱을 변경해서 모든 문자를 가져오면, 

27
00:01:58,187 --> 00:02:02,040
아, 일단 다시 파일을 열어서 포인터를 처음으로 돌려주겠습니다

28
00:02:02,041 --> 00:02:03,587
그리고 셀을 실행해보면

29
00:02:03,588 --> 00:02:07,314
-1을 넣어 슬라이싱 하지 않으면 개행문자가

30
00:02:07,315 --> 00:02:09,896
포함되서 나오고,

31
00:02:09,897 --> 00:02:15,167
저희가 원치 않는 결과를 얻게 될겁니다

32
00:02:15,168 --> 00:02:16,507
그래서 저는 다시 실행하려고 합니다. 

33
00:02:19,488 --> 00:02:20,708
그리고 사라진걸 확인활 수 있네요

34
00:02:20,709 --> 00:02:26,465
따라서 readline () 반환 값을 사용하여 while 루프를 제어할 수 있으며

35
00:02:26,466 --> 00:02:31,700
readline ()이 빈 문자열을 반환하면 루프가 끝나게 됩니다.

