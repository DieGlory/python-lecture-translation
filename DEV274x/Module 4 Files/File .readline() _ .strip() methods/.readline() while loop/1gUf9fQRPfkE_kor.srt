0
00:00:03,939 --> 00:00:07,294
텍스트 파일의 줄을 반복하려면 while 루프에서

1
00:00:07,295 --> 00:00:11,250
read line ()을 사용할 수 있습니다.

2
00:00:11,251 --> 00:00:15,265
poem 1.text를 Jupyter Notebook으로 가져와서

3
00:00:15,266 --> 00:00:20,135
이 예제를 준비했고 이제 이 파일을 열고 

4
00:00:20,136 --> 00:00:23,175
poem 1 객체에 할당합니다.

5
00:00:23,176 --> 00:00:29,660
이제 poem 1이 메모리에 열려 있으므로 read line()을 수행할 수 있습니다.

6
00:00:29,661 --> 00:00:32,380
끝에는 개행 문자 ( &amp;quot;\\ n&amp;quot;)가 있습니다. 

7
00:00:32,381 --> 00:00:36,020
그리고 우리는 저것을 다시 제거를 하기 위해서 루프를 사용할 것입니다. 

8
00:00:36,021 --> 00:00:39,329
그러한 이유로 각 라인을 통과할 수 있다는 것을 이렇게 보여 드리고 있습니다. 

9
00:00:39,330 --> 00:00:42,638
그리고 여기서 제가 할 일은 열린 파일을 

10
00:00:42,639 --> 00:00:46,369
다시 실행하고 파일의 시작 부분에 포인터를 설정합니다. 

11
00:00:46,370 --> 00:00:48,579
그래서 read line ()을 읽으면 

12
00:00:48,580 --> 00:00:51,240
파일의 시작 부분에서 시작합니다.

13
00:00:52,920 --> 00:00:56,020
그래서 바로 여기에서 한 줄의 텍스트를 읽게 될 것이고, 

14
00:00:56,021 --> 00:00:58,440
줄 바꿈 문자를 가질 것입니다.

15
00:01:00,840 --> 00:01:07,100
그리고 poem_line 중에 문자열 값이 있는 한 비어있는 문자열이 아닙니다. 

16
00:01:07,101 --> 00:01:12,770
while 루프는 계속됩니다. 

17
00:01:12,771 --> 00:01:18,163
그래서 저는 -1이라는 끝값을 사용하여 

18
00:01:18,164 --> 00:01:23,306
각 줄을 출력하고 모든 것을 위쪽으로 출력하므로 

19
00:01:23,307 --> 00:01:27,840
모든 글자를 대문자로 사용하려고 합니다. 

20
00:01:29,902 --> 00:01:34,075
그러고 나서, 그 poem_line에서 또 다른 행을 읽을 것입니다. 

21
00:01:34,076 --> 00:01:37,200
그리고 다시 검사 할 것이고 그 줄에 값이 있으면 

22
00:01:37,201 --> 00:01:42,000
빈 문자열이 반환될 때까지

23
00:01:42,001 --> 00:01:44,180
출력한 다음 루프를 끝낼 것입니다. 

24
00:01:45,540 --> 00:01:47,090
이제 코드를 실행해 봅시다. 

25
00:01:47,091 --> 00:01:53,430
그리고 우리는 여분의 문자를 반환하지 않고 각 줄을 얻습니다. 

26
00:01:53,431 --> 00:01:58,186
반환된 문자 없이 코드를 실행하면

27
00:01:58,187 --> 00:02:02,040
포인터를 다시 시작 부분으로 가져오기 위해 파일을 다시 열어야 합니다.

28
00:02:02,041 --> 00:02:03,587
그리고 셀을 실행할 것입니다. 

29
00:02:03,588 --> 00:02:07,314
그리고 -1을 입력하지 않으면, 개행 문자를 

30
00:02:07,315 --> 00:02:09,896
얻고 우리가 실제로 원하지 않는 

31
00:02:09,897 --> 00:02:15,167
추가 반환 값을 얻게 됩니다. 

32
00:02:15,168 --> 00:02:16,507
그래서 저는 다시 실행하려고 합니다. 

33
00:02:19,488 --> 00:02:20,708
그리고 우리는 이것이 사라진 것을 봅니다. 

34
00:02:20,709 --> 00:02:26,465
따라서 read line () 반환 값을 사용하여 while 루프를 제어할 수 있으며

35
00:02:26,466 --> 00:02:31,700
read line ()이 빈 문자열을 반환하면 종료 값을 반환합니다.

