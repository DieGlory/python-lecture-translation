0
00:00:04,058 --> 00:00:08,212
줄의 앞뒤 공백을 제거하기 위해 

1
00:00:08,213 --> 00:00:12,940
readline 메소드와 함께 strip 메소드를 사용해 볼 겁니다

2
00:00:12,941 --> 00:00:16,740
jupyter notebook에 poem1.txt를 가져왔습니다

3
00:00:17,820 --> 00:00:22,140
이제 이 첫 번째 셀에서 파일을 읽기 전용 모드인 "r" 로 열고

4
00:00:22,141 --> 00:00:24,000
poem1 변수에 할당해 주겠습니다

5
00:00:25,230 --> 00:00:29,065
밑에 보면 이전에 봤던

6
00:00:29,066 --> 00:00:34,840
poem1 내의 내용이 끝날때까지

17
00:00:34,841 --> 00:00:40,070
readline을 사용하는 코드가 있네요

8
00:00:40,071 --> 00:00:43,470
빈 문자열이 반환되면 poem_line 파일에 close를 사용해주도록 했습니다

9
00:00:43,471 --> 00:00:46,560
지금 이걸 보여드리는 이유는 개행문자가 포함되어 있고,

10
00:00:46,561 --> 00:00:50,580
이걸 strip 메소드를 사용해서 제거해 볼 것이기 때문입니다

11
00:00:50,581 --> 00:00:53,160
그래서 poem1을 다시 불러와서

12
00:00:53,161 --> 00:00:56,370
텍스트 파일 포인터를 처음으로 되돌리겠습니다

13
00:00:56,371 --> 00:01:01,310
그다음에 각 줄을 호출 할때 readline 메소드와 함께 

14
00:01:01,311 --> 00:01:04,510
strip 메소드를 같이 사용해 보겠습니다

15
00:01:04,511 --> 00:01:08,530
그리고 strip()은 기본적으로 

16
00:01:08,531 --> 00:01:12,050
공백문자(스페이스), 탭(\t) 이나 개행문자(\n) 같은

17
00:01:12,051 --> 00:01:15,370
공백을 제거합니다

18
00:01:16,480 --> 00:01:19,330
이 경우에는, 각 줄의 처음이나 끝에 있는

19
00:01:19,331 --> 00:01:22,580
개행 문자를 제거해줄 겁니다

20
00:01:22,581 --> 00:01:26,297
따라서 시작과 끝 모두 개행문자와 같은

21
00:01:26,298 --> 00:01:31,055
형식의 공백과 문자는 제거됩니다. 

22
00:01:31,056 --> 00:01:34,252
그래서 지금 부터 실행하는 코드는

23
00:01:34,253 --> 00:01:34,774
텍스트 파일 내용을 읽고, strip 하는 겁니다

24
00:01:34,775 --> 00:01:37,594
poem_line 에 어떤 값이라도 남아있다면,

25
00:01:37,595 --> 00:01:42,556
만약 빈 문자열이 아니라면, 계속해서 poem_line을 출력하게 됩니다

26
00:01:42,557 --> 00:01:46,330
그런 다음 다시 반복해 보겠습니다. 

27
00:01:46,331 --> 00:01:49,931
while루프가 다시 실행되고

28
00:01:49,932 --> 00:01:54,493
이건 빈 문자열입니다. 비어 있지 않으면 빈 상태가 될 때까지 

29
00:01:54,494 --> 00:01:57,716
계속 진행하여 파일을 닫습니다.

30
00:01:57,717 --> 00:01:59,979
그러니 계속 실행해보고, 

31
00:01:59,980 --> 00:02:02,929
공백이 모두 제거되었는지 확인해보겠습니다. 

32
00:02:04,766 --> 00:02:07,904
strip 메소드를 readline의 출력값에 적용하면

33
00:02:07,905 --> 00:02:12,710
개행문자나 스페이스 같은 공백 문자를 제거할 수 있습니다. 

