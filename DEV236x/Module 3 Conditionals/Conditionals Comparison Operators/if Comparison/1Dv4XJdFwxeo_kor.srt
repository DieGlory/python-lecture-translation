0
00:00:06,542 --> 00:00:11,311
코드에서 분기를 구성하기 쉽도록 if else 구문과

1
00:00:11,312 --> 00:00:12,824
비교연산자를 같이 사용합니다

2
00:00:14,975 --> 00:00:20,605
여기서 x가 25보다 큰 지 테스트 하는 예제가 있습니다

3
00:00:20,606 --> 00:00:25,675
x가 25보다 크면 "x is already than 25"가 출력됩니다

4
00:00:25,676 --> 00:00:30,858
만약 참이 아니라면, x가 25보다 작다면

5
00:00:30,859 --> 00:00:36,162
else 문이 실행되고 현재 x 값이 출력됩니다

6
00:00:36,163 --> 00:00:40,260
그런 다음 x를 26으로 초기화하고 사용자에게 알립니다

7
00:00:40,261 --> 00:00:41,060
이 코드를 실행해 봅시다.

8
00:00:42,320 --> 00:00:46,410
그래서 x =23일때 false로 평가되고

9
00:00:46,411 --> 00:00:49,518
else 문이 실행됩니다.

10
00:00:51,995 --> 00:00:56,311
값을 25보다 크게 설정하면, 아 죄송합니다 26입니다.

11
00:00:56,312 --> 00:01:01,660
그럼 "x is already greater than 25"가 출력됩니다

12
00:01:01,661 --> 00:01:05,061
우리는 코드에서 분기를 사용하고 있습니다.

13
00:01:07,877 --> 00:01:13,309
이 예에서는 플레이어 위치와 트랩 위치가 설정된

14
00:01:13,310 --> 00:01:16,870
게임보드가 있습니다

15
00:01:16,871 --> 00:01:21,660
우리가 함정에 빠져 있는지 확인하는 if 문을 수행합니다.

16
00:01:21,661 --> 00:01:25,470
우리가 함정에 빠져있지 않고, 참이라고 나온다면 계속 플레이 할 수 있을 겁니다

17
00:01:25,471 --> 00:01:29,810
우리가 함정에 빠졌다면

18
00:01:29,811 --> 00:01:31,390
게임이 끝난겁니다

19
00:01:31,391 --> 00:01:35,280
그래서 플레이어 위치가 19이고 함정 위치가 18인 체로

20
00:01:35,281 --> 00:01:36,730
시작하면 계속 플레이 할 수 있습니다

21
00:01:36,731 --> 00:01:39,700
18에 있는 함정에 스스로 빠지면

22
00:01:39,701 --> 00:01:41,240
게임은 끝납니다

23
00:01:42,800 --> 00:01:46,530
마지막 예제에서 등호 비교 연산자를 써볼겁니다

24
00:01:46,531 --> 00:01:50,970
먼저, 하나의 등호를 사용하여

25
00:01:50,971 --> 00:01:52,370
변수 x의 값을 2로 설정합니다.

26
00:01:52,371 --> 00:01:57,751
비교 if 문에서 x의 값이 2인지 확인하고,

27
00:01:57,752 --> 00:02:02,684
맞다면 이중등호에 대한

28
00:02:02,685 --> 00:02:03,687
메세지를 출력할겁니다

29
00:02:03,688 --> 00:02:07,330
만약 비교연산 결과가 참이 아니라면 pass 키워드를 써서 그냥 넘어갈 겁니다

30
00:02:08,360 --> 00:02:14,040
그래서 우리는 if/else 문에서 코드에서의 분기를

31
00:02:14,041 --> 00:02:18,390
비교 연산자를 통해 만드는 방법에 대해 배웠고,

32
00:02:18,391 --> 00:02:19,560
재미있는 코드를 만드는데 도움이 된다는 사실을 배웠습니다

