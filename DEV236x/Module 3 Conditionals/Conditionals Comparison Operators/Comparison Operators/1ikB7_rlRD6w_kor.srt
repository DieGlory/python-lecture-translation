0
00:00:03,229 --> 00:00:08,040
보다 큼, 작거나 같음과 같은 비교 연산자를 사용하여

1
00:00:08,041 --> 00:00:14,080
true / false 부울을 검사할 수 있습니다.

2
00:00:14,081 --> 00:00:18,480
각 비교 연산자를 살펴보겠습니다.

3
00:00:18,481 --> 00:00:22,000
3 > 5는 거짓입니다.

4
00:00:22,001 --> 00:00:26,425
3 < 5는 참입니다.

5
00:00:26,426 --> 00:00:33,700
3 > 3은 거짓입니다.

6
00:00:33,701 --> 00:00:37,000
그래서 >= 를 사용합니다.

7
00:00:37,001 --> 00:00:39,057
3 >= 3은 참입니다.

8
00:00:39,058 --> 00:00:44,470
이것들은 우리가 수학 수업에서 배운 것처럼 작동합니다.

9
00:00:46,092 --> 00:00:48,020
할당 vs 비교

10
00:00:49,320 --> 00:00:52,150
여기서 points의 값을 0으로 할당합니다

11
00:00:52,151 --> 00:00:56,940
할당에는 단일 등호가 사용됩니다.

12
00:00:56,941 --> 00:00:59,183
비교하려면 두 개의 등호를 사용합니다.

13
00:00:59,184 --> 00:01:02,703
points가 9인지 비교합니다

14
00:01:02,704 --> 00:01:05,130
False 네요

15
00:01:05,131 --> 00:01:09,850
값을 9로 초기화하면 비교결과가 참으로 나오네요

16
00:01:13,087 --> 00:01:16,510
!=를 사용할때는 조금 헷깔릴 수도 있습니다

17
00:01:17,740 --> 00:01:21,350
여기 x에 값을 3으로 설정하겠습니다

18
00:01:21,351 --> 00:01:25,940
그리고 여기 !=는 print 함수 내에서 비교를 수행하며

19
00:01:25,941 --> 00:01:29,628
 true 또는 false를 반환합니다.

20
00:01:29,629 --> 00:01:33,780
x != 9입니까?

21
00:01:33,781 --> 00:01:37,960
x가 3과 같습니까? x가 3이므로

22
00:01:37,961 --> 00:01:44,390
x != 9는 참이 아니고,

23
00:01:44,391 --> 00:01:47,460
x == 3은 참입니다.

24
00:01:47,461 --> 00:01:51,500
이제 우리는 우리의 부울 값을 반환하는

25
00:01:51,501 --> 00:01:53,520
비교 연산자에 대해 알아봤습니다

