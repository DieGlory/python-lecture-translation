0
00:00:03,611 --> 00:00:08,095
문자열 비교는 ture와 false로 결과가 나오며

1
00:00:08,096 --> 00:00:12,280
코드 흐름 제어를 위해 if 문과 같이 사용할 수 있습니다

2
00:00:12,281 --> 00:00:16,020
첫 번째 예에서는 msg라는

3
00:00:16,021 --> 00:00:18,490
문자열이 있으며 "Save the notebook"이라는 값을 저장하고 있습니다

4
00:00:18,491 --> 00:00:22,730
그리고 이 문자열이

5
00:00:22,731 --> 00:00:28,028
이 문자열 리터럴 "save the notebook"과 같은지 비교해보고 싶네요

6
00:00:28,029 --> 00:00:29,060
만약 참이라면, 우리 예상대로

7
00:00:29,061 --> 00:00:31,520
메시지를 출력할 것입니다.

8
00:00:32,750 --> 00:00:38,355
만약 false가 나온다면, else 문으로 이동하고,

9
00:00:40,380 --> 00:00:43,956
메세지를 출력하지 않을겁니다

10
00:00:43,957 --> 00:00:45,109
코드를 실행해 봅시다.

11
00:00:46,813 --> 00:00:49,509
예상과 다르게 msg와 리터럴 문자가 다르기 때문에

12
00:00:49,510 --> 00:00:53,820
false라고 나오네요

13
00:00:53,821 --> 00:00:57,789
보면 두 문자열 중 한 문자열만 앞글자가 대문자이기

14
00:00:57,790 --> 00:00:58,750
때문에 false라고 나온 걸 알수 있습니다

15
00:01:00,650 --> 00:01:04,080
이 코드를 작성하는 보다 좋은 방법은

16
00:01:04,081 --> 00:01:05,930
prediction 변수를 만들어 버리는 겁니다

17
00:01:05,931 --> 00:01:09,320
두 개 모두 변수로 사용할 수 있습니다

18
00:01:09,321 --> 00:01:12,790
그리고 대소문자 구분을 무시할 겁니다

19
00:01:12,791 --> 00:01:18,840
그렇게 하기 위해 양변에 lower 메소드를 사용해줄 겁니다

20
00:01:18,841 --> 00:01:20,650
msg와 prediction 둘다 대소문자 구분이

21
00:01:20,651 --> 00:01:25,410
없어질 겁니다

22
00:01:25,411 --> 00:01:28,300
이전과 동일하게, if문이 참으로 나온다면

23
00:01:28,301 --> 00:01:34,070
예상대로 메시지를 출력할 겁니다

24
00:01:35,670 --> 00:01:38,820
그리고 그렇지 않으면, else 문으로 갈겁니다

25
00:01:38,821 --> 00:01:42,410
참이 아니라면 메세지는 우리가 예측한대로 나와주지 않겠죠

26
00:01:42,411 --> 00:01:48,430
그리고 이번에는 대소문자를 무시한 덕분에 메세지가 예상한대로 나와주었네요

27
00:01:49,670 --> 00:01:55,850
이 예에서 우리는 이름을 입력으로 받을겁니다

28
00:01:55,851 --> 00:02:00,760
성을 말이죠. 그리고 c보다 알파벳 순서가 앞에 있는지 검사할거에요

29
00:02:02,270 --> 00:02:07,850
ASCII 파트를 기억한다면 대문자 C가 소문자 c 보다

30
00:02:07,851 --> 00:02:14,430
앞에 있다는걸 알겁니다. 이건 그냥 ASCII가 작동하는 방법입니다

31
00:02:14,431 --> 00:02:17,020
순서대로 진행해보자면

32
00:02:17,021 --> 00:02:21,840
소문자로 들어가는지 확인합니다

33
00:02:21,841 --> 00:02:26,160
소문자로 바꿨는지를 왜 확인하냐면, 대문자 Z가 소문자 c보다 아스키코드상

34
00:02:26,161 --> 00:02:30,440
앞에 있기 때문에 제대로 검사가 안됩니다.

35
00:02:30,441 --> 00:02:32,780
그래서 다시 확인하면

36
00:02:32,781 --> 00:02:37,500
참이라면 Welcome to the a, b, c line을 출력하고

37
00:02:37,501 --> 00:02:40,573
거짓이라고 나왔다면

38
00:02:40,574 --> 00:02:46,680
 sorry, this is only for a, b, c를 출력할 겁니다

39
00:02:46,681 --> 00:02:48,820
이제 코드를 실행 해 봅시다.

40
00:02:48,821 --> 00:02:53,150
성을 입력하라고 요청합니다, 우리는

41
00:02:53,151 --> 00:02:58,069
Babic에 Welcome the the a, b, c line을 넣을 것입니다.

42
00:02:59,300 --> 00:03:00,420
다시 실행해보면

43
00:03:01,630 --> 00:03:03,049
Derosa를 넣어보겠습니다

44
00:03:07,752 --> 00:03:11,488
if문과 문자열 비교를 사용하여

45
00:03:11,489 --> 00:03:13,890
프로그램의 흐름을 제어할 수 있습니다.

