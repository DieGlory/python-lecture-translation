0
00:00:03,210 --> 00:00:05,346
변수는 단지 상자입니다.

1
00:00:05,347 --> 00:00:08,661
객체를 담고 있는 저장소 위치의 이름이죠.

2
00:00:08,662 --> 00:00:11,745
여러분은 아마 수학에서 변수를 사용해본 경험이 있을겁니다.

3
00:00:11,746 --> 00:00:16,832
x =5 나 변수를 사용하는 다른 방정식을 말이죠

4
00:00:16,833 --> 00:00:19,080
파이썬에서도 비슷합니다.

5
00:00:19,081 --> 00:00:23,759
파이썬에서는 변수를 사용하여 코드를 재사용할 수 있고

6
00:00:23,760 --> 00:00:27,535
변수에 다른 값을 할당할 수 있습니다.

7
00:00:29,687 --> 00:00:35,430
그래서 파이썬에서는 아주 단순한 이름을 사용합니다.

8
00:00:35,431 --> 00:00:36,600
student_name이

9
00:00:36,601 --> 00:00:39,540
변수의 좋은 예시가 되겠네요

10
00:00:39,541 --> 00:00:42,280
어떤 변수인지 알기 쉽고, 소문자를

11
00:00:42,281 --> 00:00:44,060
사용하고, 밑줄('_')로 연결되있네요.

12
00:00:45,910 --> 00:00:49,360
변수는 수학에서 처럼 숫자만 저장할 수 있는게 아니라

13
00:00:49,361 --> 00:00:50,910
문자열을 저장할 수도 있습니다.

14
00:00:53,400 --> 00:00:58,430
셀을 실행하면 출력이 되지는 않지만

15
00:00:58,431 --> 00:01:03,990
student_name 이라는 저장소 위치에

16
00:01:03,991 --> 00:01:05,930
"Jonna Dias"를 저장해 준겁니다

17
00:01:07,360 --> 00:01:12,930
따옴표로 묶여져 있는 학생 이름을 말이죠

18
00:01:12,931 --> 00:01:16,825
그러면 변수를 다시 호출할 수 있고

19
00:01:16,826 --> 00:01:19,814
아래에 변수에 저장된 내용이 출력됩니다.

20
00:01:22,187 --> 00:01:27,487
이전 강의에서 했던 것처럼 문자열만을 출력해도 됩니다

21
00:01:30,401 --> 00:01:34,404
하지만 변수를 사용하면 이 작업을 자동화 할 수 있죠

22
00:01:34,405 --> 00:01:38,027
그리고 다른 코드에서 student_name에 

23
00:01:38,028 --> 00:01:39,325
저장된 값을 바꿔서

24
00:01:39,326 --> 00:01:42,485
다른 학생의 이름을 출력할 수도 있습니다.

25
00:01:44,947 --> 00:01:46,816
자, 뭐가 보이시나요?

26
00:01:46,817 --> 00:01:49,785
이걸 변수 재할당이라고 부릅니다.

27
00:01:49,786 --> 00:01:54,487
아래 예시를 보겠습니다.

28
00:01:54,488 --> 00:01:57,400
처음 출력했을 때, 학생 이름은 Joana였습니다.

29
00:01:59,658 --> 00:02:03,594
그런 다음 변수를 Colette로 다시 저장하고

30
00:02:03,595 --> 00:02:06,658
다시 print문을 사용할 때 Colette가 출력됩니다.

31
00:02:09,199 --> 00:02:13,441
>> 맨 위로 돌아가서 셀을 다시

32
00:02:13,442 --> 00:02:15,979
실행하고 변수를 다시 초기화할 수 있습니다.

33
00:02:17,220 --> 00:02:21,870
그리고 이제 student_name에서 과거의 값을 볼수 있습니다.

34
00:02:23,430 --> 00:02:28,342
지금은 Joana입니다. 그리고 위의 셀을 다시 실행하고

35
00:02:28,343 --> 00:02:33,541
student_name을 실행하면 다시 Colette로 변경됩니다.

36
00:02:36,233 --> 00:02:40,865
>> 그래서 변수는 우리가 코드에서 사용할 수 있는

37
00:02:40,866 --> 00:02:44,196
저장 주소의 이름입니다. 우리가 나중에 보게 될

38
00:02:44,197 --> 00:02:47,450
리터럴 문자열이나 숫자 또는 다른 객체와 같습니다.

39
00:02:47,451 --> 00:02:51,810
변수는 변경이 쉽기 때문에 코드 내에서 해당 변수를

40
00:02:51,811 --> 00:02:55,560
재사용하면 더 효율적으로 사용할 수 있다는 것을 기억하세요.