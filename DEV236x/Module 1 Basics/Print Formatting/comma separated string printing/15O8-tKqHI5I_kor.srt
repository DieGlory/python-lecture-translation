0
00:00:03,890 --> 00:00:06,470
우리는 문자열에 더하기 연산자를 사용하여

1
00:00:06,530 --> 00:00:10,500
문자열과 문자열을 결합하여 출력하는 방법을 배웠습니다.

2
00:00:10,560 --> 00:00:12,830
이제 print문으로 쉼표를 사용해서 

3
00:00:12,890 --> 00:00:16,560
문자열을 연결하는 방법에 대해서 알아보겠습니다

4
00:00:18,990 --> 00:00:23,080
여기에 문자열 변수를 만들고

5
00:00:23,180 --> 00:00:27,120
Name : Collette를 입력한 후 셀을 실행해보겠습니다.

6
00:00:27,200 --> 00:00:30,640
변수에 Collette를 채우고

7
00:00:30,740 --> 00:00:32,820
아래를 보겠습니다

8
00:00:32,900 --> 00:00:36,700
이건 우리가 기존에 print 함수를 쓰는 방법입니다 

9
00:00:36,800 --> 00:00:40,740
문자열에 변수를 이어주고

10
00:00:40,820 --> 00:00:45,120
그다음에 다시 문자열을 이어주었습니다

11
00:00:45,220 --> 00:00:47,440
셀을 실행해 보겠습니다

12
00:00:47,540 --> 00:00:49,900
자, "Hello Collette!" 이 나왔네요

13
00:00:49,980 --> 00:00:53,620
print 함수에서 쉼표를 쓸때는 

14
00:00:53,680 --> 00:00:56,820
다른 방식으로 사용합니다

15
00:00:56,900 --> 00:01:00,200
쉼표를 사용할때는

16
00:01:00,280 --> 00:01:04,340
문자열과 다른 문자열 사이에 쉼표를 사용합니다

17
00:01:04,460 --> 00:01:05,420
그래서 이렇게 해줬고요

18
00:01:05,480 --> 00:01:09,870
"Hello to"와 collete, "who is from our city"이 있네요

19
00:01:09,970 --> 00:01:11,520
문자열을 실행해 보겠습니다

20
00:01:11,600 --> 00:01:15,740
print 문 안에 있는 쉼표를 끼고 있는

21
00:01:15,840 --> 00:01:19,000
모든 문자열이 연결되어진 것을

22
00:01:19,080 --> 00:01:20,720
볼 수 있습니다. 대신

23
00:01:20,780 --> 00:01:24,420
문자열 사이에 쉼표를 넣으면 각 문자 사이에 공백이 생깁니다.

24
00:01:24,500 --> 00:01:27,500
그래서, "Hello to" 에 공백이 더해지고

25
00:01:27,600 --> 00:01:31,140
" Collette&quot" 에 공백이 더해졌습니다

26
00:01:31,240 --> 00:01:33,640
그래서 우리는 print 함수를 쓸때 쉼표를 사용할 수 있게 되었고

27
00:01:33,740 --> 00:01:36,660
문자열을 매우 빠르게 이을 수 있게 되었습니다

28
00:01:36,760 --> 00:01:39,080
리터럴 문자열이나, 문자열 변수 사이에

29
00:01:39,180 --> 00:01:43,800
쉼표를 넣어서 말이죠

