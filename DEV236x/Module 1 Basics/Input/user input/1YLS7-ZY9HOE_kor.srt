0
00:00:03,280 --> 00:00:07,270
우리는 문자열과 문자열 변수로

1
00:00:07,390 --> 00:00:09,270
많은 작업을 했습니다.

2
00:00:09,370 --> 00:00:13,160
하지만 이렇게 사용하는 것만으로는 한계가 있으므로

3
00:00:13,260 --> 00:00:15,240
입력문을 써서 이 문제를 해결해보도록 하겠습니다

4
00:00:15,370 --> 00:00:21,910
그래서 바로 여기에 두 번째 줄

5
00:00:22,030 --> 00:00:27,890
input 함수로 small_int 변수에 값을 줘보겠습니다

6
00:00:27,990 --> 00:00:31,930
그리고 사용자에게

7
00:00:32,030 --> 00:00:34,200
정수 또는 작은 정수를 입력하라는 메시지를 출력하게 되있네요

8
00:00:34,300 --> 00:00:36,860
그럼 어떻게 작동하는지 봅시다.

9
00:00:36,920 --> 00:00:40,070
그래서 지금 작은 정수를 입력하라고 나오네요

10
00:00:40,140 --> 00:00:42,040
그리고 여기 값을 넣을 수 있습니다

11
00:00:42,140 --> 00:00:44,530
3 정도면 충분히 작다고 생각되네요. 한번 넣어보겠습니다

12
00:00:44,630 --> 00:00:48,670
small_int에 3을 넣었습니다

13
00:00:48,740 --> 00:00:52,620
3이 출력되네요

14
00:00:52,740 --> 00:00:54,800
아래 셀로 가서 결과를 확인해보겠습니다

15
00:00:54,920 --> 00:00:56,930
물론 small_int에 접근 가능합니다

16
00:00:56,990 --> 00:01:00,090
왜냐하면 Jupyter 노트북에서

17
00:01:00,190 --> 00:01:01,760
셀에서 변수, 객체가 생성 되면 어느 것이든

18
00:01:01,820 --> 00:01:06,200
다른 모든 셀에서

19
00:01:06,260 --> 00:01:10,470
사용할 수 있습니다

20
00:01:10,570 --> 00:01:14,210
이제 이 셀을 실행하게 되면,

21
00:01:14,270 --> 00:01:17,360
3이 나오네요. 잘 작동하는거 같습니다

22
00:01:17,460 --> 00:01:19,760
자, 한번 더 해보겠습니다

23
00:01:19,860 --> 00:01:23,990
저는 이번에는 5를 넣을거고,

24
00:01:24,050 --> 00:01:26,760
small_int에 값을 넣었씁니다

25
00:01:26,880 --> 00:01:29,930
그리고 그 아래에 보면 5를 확인할 수 있습니다

26
00:01:30,660 --> 00:01:34,510
따라서 input 함수를 사용하여 변수에 문자열을 넣을 수 있고,

27
00:01:34,590 --> 00:01:36,310
우리 프로그램에서 사용할 수 있습니다

