0
00:00:03,860 --> 00:00:06,390
 string format method는 출력을 변경하는데

1
00:00:06,440 --> 00:00:09,536
매우 유용합니다

2
00:00:09,580 --> 00:00:13,360
모두 대문자로 바꾸거나, 소문자, 혹은 문자열에서 첫번째 문자만 대문자로 바꿀 때 말이죠

3
00:00:13,570 --> 00:00:15,240
또 유용하게 쓰이는 곳이 더 있습니다.

4
00:00:15,290 --> 00:00:18,400
사용자 입력에서 사용할 때죠

5
00:00:18,540 --> 00:00:22,740
우리는 이제 2가지를 해볼겁니다

6
00:00:22,790 --> 00:00:25,679
우선 우리가 전에 봤었던 것처럼

7
00:00:25,720 --> 00:00:33,239
변수 fav_color가 있네요.

8
00:00:33,280 --> 00:00:36,840
사용자 입력에 lower 메소드를 적용해볼겁니다.

9
00:00:36,890 --> 00:00:39,420
변수 값이 어떻게 바뀌는지 한번 보죠

10
00:00:39,470 --> 00:00:44,960
이렇게 하는 이유는 입력에 형식을 적용하는겁니다.

11
00:00:45,170 --> 00:00:48,432
메소드를 쓰려면 

12
00:00:48,610 --> 00:00:53,728
입력 함수 오른쪽에 .lower를 쓰기만 하면 됩니다.

13
00:00:53,770 --> 00:01:00,640
왜냐하면 입력함수는 문자열을 반환하는데, .lower는 문자열에 사용할 수 있기 때문입니다.

14
00:01:00,730 --> 00:01:03,376
그래서 여기 문자열이 들어올겁니다.

15
00:01:03,500 --> 00:01:07,170
무슨 값이 됐든, 우리가 넣은 값이 반환되서 말이죠

16
00:01:07,220 --> 00:01:09,630
실행을 해보겠습니다.

17
00:01:09,680 --> 00:01:12,390
제가 제일 좋아하는 색을 넣어보겠습니다.

18
00:01:12,440 --> 00:01:17,369
Green을 넣으면, 제가 제일 좋아하는 색인

19
00:01:17,410 --> 00:01:20,280
green이 출력되네요. 그리고 첫문자를 대문자로 넣었는데

20
00:01:20,330 --> 00:01:23,579
lower 메소드에 의해서 지워진 걸 알수 있습니다.

21
00:01:23,620 --> 00:01:33,712
upper를 사용해보겠습니다. 그리고 Blue를 넣어보니

22
00:01:33,760 --> 00:01:37,109
모두 대문자가 되었네요

23
00:01:37,150 --> 00:01:41,780
그러면 언제 string format method를 사용하면

24
00:01:41,830 --> 00:01:45,780
좋을까요?

25
00:01:45,830 --> 00:01:51,152
input 함수를 사용하거나, input 함수가 변수에 값을 넣을때,

26
00:01:51,250 --> 00:01:54,560
print 함수를 사용할때 문자를 바꾸고 싶을때 사용하면 됩니다.

27
00:01:54,610 --> 00:01:59,648
이 메소드의 장점은

28
00:01:59,850 --> 00:02:02,960
변경해서 출력을 하더라도, 기존의 문자열에는 수정이 없어서,

29
00:02:03,010 --> 00:02:07,056
원래 문자열 형식을 보고 싶을때 그대로 사용할 수 있다는 점입니다.

30
00:02:07,210 --> 00:02:11,430
한번 해보겠습니다

31
00:02:11,480 --> 00:02:17,010
Yellow를 입력하면,

32
00:02:17,060 --> 00:02:23,904
모두 대문자로 출력되는 걸 볼 수 있습니다.

33
00:02:24,030 --> 00:02:31,872
문자열에 어떤 변경도 없이 말이죠

34
00:02:31,970 --> 00:02:37,024
Yellow가 그대로 출력 되는걸 

35
00:02:37,340 --> 00:02:41,280
볼 수 있습니다

36
00:02:41,330 --> 00:02:43,019
문자열 입력을 다룰때,

37
00:02:43,060 --> 00:02:46,544
문자열을 수정을 해야할지 고민하게 됩니다.

38
00:02:46,590 --> 00:02:49,079
이 메소드를 사용하면

39
00:02:49,120 --> 00:02:51,569
print문이나 다른 함수를 사용할때

40
00:02:51,610 --> 00:03:00,230
문자열을 변경하지 않아도 원하는 형식으로 출력할 수 있게됩니다

